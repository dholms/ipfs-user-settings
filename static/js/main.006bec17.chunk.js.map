{"version":3,"sources":["components/ColorPicker.js","components/SubmitButton.js","utils/styleOptions.js","components/PreferenceForm.js","utils/prefPropType.js","components/Preview.js","utils/codeSample.js","components/ErrorSnackbar.js","components/Loader.js","components/Main.js","App.js","index.js","ipfs/preferences.js"],"names":["ColorPicker","state","anchorEl","openPicker","evt","preventDefault","setState","currentTarget","closePicker","handleChange","value","target","hex","props","onChange","this","classes","Fragment","Button","onClick","className","preview","style","backgroundColor","Popover","open","onClose","onChangeComplete","React","Component","withStyles","theme","createStyles","button","fontSize","marginLeft","spacing","width","height","submitted","textNormal","textSubmitted","text","icon","variant","color","type","disabled","PreferenceForm","PropTypes","shape","username","string","primaryColor","secondaryColor","font","codeStyle","handleCIDChange","onCIDChange","handlePrefChange","name","onPrefChange","preferences","justSaved","justLoaded","Paper","root","Typography","header","onSubmit","onLoad","TextField","label","cid","fullWidth","input","Divider","divider","onSave","InputLabel","shrink","Select","MenuItem","key","styleOptions","map","padding","borderBottom","palette","paddingBottom","marginBottom","marginTop","display","SyntaxHighlighter","registerLanguage","js","Preview","getTheme","createMuiTheme","primary","main","secondary","isDark","classnames","darkTheme","lightTheme","MuiThemeProvider","AppBar","position","Toolbar","Container","container","language","codeStyles","paddingTop","margin","snackbar","error","dark","content","message","alignItems","errorIcon","marginRight","closeIcon","Snackbar","anchorOrigin","vertical","horizontal","autoHideDuration","SnackbarContent","action","IconButton","justifyContent","loaded","children","CircularProgress","size","Main","ipfsLoaded","loadPreferences","a","toString","localStorage","setItem","handleLoad","handleSave","savePreferences","handleErrorClose","getItem","DefaultCid","gutterBottom","Grid","item","sm","md","App","CssBaseline","ReactDOM","render","document","getElementById","password","process","getIpfs","getIpfsWithConfig","bootstrap","validPreferences","length","ipfs","cat","resp","Error","JSON","parse","toAdd","Buffer","from","stringify","add","hash","pin","console"],"mappings":"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","file":"static/js/main.006bec17.chunk.js","sourcesContent":["import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { withStyles, createStyles } from \"@material-ui/core/styles\";\nimport Button from \"@material-ui/core/Button\";\nimport Popover from \"@material-ui/core/Popover\";\nimport { SwatchesPicker } from \"react-color\";\n\nclass ColorPicker extends React.Component {\n  state = { anchorEl: null };\n\n  openPicker = evt => {\n    evt.preventDefault();\n    this.setState({ anchorEl: evt.currentTarget });\n  };\n\n  closePicker = () => {\n    this.setState({ anchorEl: null });\n  };\n\n  handleChange = evt => {\n    const value = {\n      target: {\n        value: evt.hex\n      }\n    };\n    this.closePicker();\n    this.props.onChange(value);\n  };\n\n  render() {\n    const { value, classes } = this.props;\n    return (\n      <React.Fragment>\n        <Button onClick={this.openPicker}>\n          {value}\n          <div className={classes.preview} style={{ backgroundColor: value }} />\n        </Button>\n        <Popover\n          open={!!this.state.anchorEl}\n          anchorEl={this.state.anchorEl}\n          onClose={this.closePicker}\n        >\n          <SwatchesPicker onChangeComplete={this.handleChange} />\n        </Popover>\n      </React.Fragment>\n    );\n  }\n}\n\nColorPicker.propTypes = {\n  value: PropTypes.string,\n  onChange: PropTypes.func,\n  classes: PropTypes.objectOf(PropTypes.string)\n};\n\nconst styles = theme =>\n  createStyles({\n    button: {\n      \"& svg\": {\n        fontSize: 20,\n        marginLeft: theme.spacing(1)\n      }\n    },\n    preview: {\n      marginLeft: theme.spacing(1),\n      width: theme.spacing(2),\n      height: theme.spacing(2)\n    }\n  });\n\nexport default withStyles(styles)(ColorPicker);\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { withStyles, createStyles } from \"@material-ui/core/styles\";\nimport Button from \"@material-ui/core/Button\";\nimport CheckIcon from \"@material-ui/icons/Check\";\n\nconst SubmitButton = props => {\n  const { submitted, textNormal, textSubmitted } = props;\n  const text = submitted ? textSubmitted : textNormal;\n  const icon = submitted ? <CheckIcon /> : props.icon;\n\n  return (\n    <Button\n      variant=\"contained\"\n      color=\"secondary\"\n      type=\"submit\"\n      disabled={submitted}\n      className={props.classes.button}\n    >\n      {text}\n      {icon}\n    </Button>\n  );\n};\n\nSubmitButton.propTypes = {\n  textNormal: PropTypes.string.isRequired,\n  textSubmitted: PropTypes.string.isRequired,\n  icon: PropTypes.element,\n  submitted: PropTypes.bool,\n  classes: PropTypes.objectOf(PropTypes.string)\n};\n\nconst styles = theme =>\n  createStyles({\n    button: {\n      \"& svg\": {\n        fontSize: 20,\n        marginLeft: 8\n      }\n    }\n  });\n\nexport default withStyles(styles)(SubmitButton);\n","export default [\n  \"arduinoLight\",\n  \"codepenEmbed\",\n  \"darcula\",\n  \"docco\",\n  \"github\",\n  \"googlecode\",\n  \"hybrid\",\n  \"monokaiSublime\",\n  \"nord\",\n  \"ocean\",\n  \"pojoaque\",\n  \"tomorrow\",\n  \"tomorrowNight\",\n  \"vs\"\n];\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { withStyles, createStyles } from \"@material-ui/core/styles\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Typography from \"@material-ui/core/Typography\";\nimport TextField from \"@material-ui/core/TextField\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport Select from \"@material-ui/core/Select\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport Divider from \"@material-ui/core/Divider\";\nimport LoadIcon from \"@material-ui/icons/Unarchive\";\nimport SaveIcon from \"@material-ui/icons/Save\";\nimport ColorPicker from \"./ColorPicker\";\nimport SubmitButton from \"./SubmitButton\";\nimport styleOptions from \"../utils/styleOptions\";\nimport PrefPropType from \"../utils/prefPropType\";\n\nclass PreferenceForm extends React.Component {\n  handleCIDChange = evt => {\n    this.props.onCIDChange(evt.target.value);\n  };\n\n  handlePrefChange = name => evt => {\n    const value = evt.target.value;\n    this.props.onPrefChange(name, value);\n  };\n\n  render() {\n    const { preferences, justSaved, justLoaded, classes } = this.props;\n\n    return (\n      <Paper className={classes.root}>\n        <Typography variant=\"h5\" className={classes.header}>\n          Settings\n        </Typography>\n        <form onSubmit={this.props.onLoad}>\n          <TextField\n            label=\"cid\"\n            value={this.props.cid}\n            onChange={this.handleCIDChange}\n            fullWidth\n            className={classes.input}\n          />\n          <SubmitButton\n            textNormal=\"Load\"\n            textSubmitted=\"Loaded\"\n            icon={<LoadIcon />}\n            submitted={justLoaded}\n          />\n        </form>\n        <Divider className={classes.divider} />\n        <form onSubmit={this.props.onSave}>\n          <TextField\n            label=\"Username\"\n            value={preferences.username}\n            onChange={this.handlePrefChange(\"username\")}\n            fullWidth\n            className={classes.input}\n          />\n          <InputLabel shrink>Primary Color</InputLabel>\n          <ColorPicker\n            value={preferences.primaryColor}\n            onChange={this.handlePrefChange(\"primaryColor\")}\n          />\n          <InputLabel shrink>Secondary Color</InputLabel>\n          <ColorPicker\n            value={preferences.secondaryColor}\n            onChange={this.handlePrefChange(\"secondaryColor\")}\n          />\n          <InputLabel shrink>Theme</InputLabel>\n          <Select\n            value={preferences.theme}\n            onChange={this.handlePrefChange(\"theme\")}\n            fullWidth\n            className={classes.input}\n          >\n            <MenuItem key=\"light\" value=\"light\">\n              light\n            </MenuItem>\n            <MenuItem key=\"dark\" value=\"dark\">\n              dark\n            </MenuItem>\n          </Select>\n          <InputLabel shrink>Code Style</InputLabel>\n          <Select\n            value={preferences.codeStyle}\n            onChange={this.handlePrefChange(\"codeStyle\")}\n            fullWidth\n            className={classes.input}\n          >\n            {styleOptions.map(style => (\n              <MenuItem key={style} value={style}>\n                {style}\n              </MenuItem>\n            ))}\n          </Select>\n          <SubmitButton\n            textNormal=\"Save\"\n            textSubmitted=\"Saved\"\n            icon={<SaveIcon />}\n            submitted={justSaved}\n          />\n        </form>\n      </Paper>\n    );\n  }\n}\n\nPreferenceForm.propTypes = {\n  cid: PropTypes.string.isRequired,\n  preferences: PrefPropType.isRequired,\n  justSaved: PropTypes.bool.isRequired,\n  justLoaded: PropTypes.bool.isRequired,\n  onCIDChange: PropTypes.func.isRequired,\n  onPrefChange: PropTypes.func.isRequired,\n  onLoad: PropTypes.func.isRequired,\n  onSave: PropTypes.func.isRequired,\n  classes: PropTypes.objectOf(PropTypes.string)\n};\n\nconst styles = theme =>\n  createStyles({\n    root: {\n      padding: theme.spacing(4),\n      width: \"100%\"\n    },\n    header: {\n      borderBottom: `1px solid ${theme.palette.divider}`,\n      paddingBottom: theme.spacing(1),\n      marginBottom: theme.spacing(2)\n    },\n    divider: {\n      marginTop: theme.spacing(4),\n      marginBottom: theme.spacing(4)\n    },\n    input: {\n      marginBottom: theme.spacing(2),\n      width: \"100%\",\n      display: \"block\"\n    }\n  });\n\nexport default withStyles(styles)(PreferenceForm);\n","import PropTypes from \"prop-types\";\n\nexport default PropTypes.shape({\n  username: PropTypes.string,\n  primaryColor: PropTypes.string,\n  secondaryColor: PropTypes.string,\n  theme: PropTypes.string,\n  font: PropTypes.string,\n  codeStyle: PropTypes.string\n});\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport classnames from \"classnames\";\nimport {\n  withStyles,\n  createStyles,\n  MuiThemeProvider,\n  createMuiTheme\n} from \"@material-ui/core/styles\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Typography from \"@material-ui/core/Typography\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport Container from \"@material-ui/core/Container\";\nimport Button from \"@material-ui/core/Button\";\nimport { Light as SyntaxHighlighter } from \"react-syntax-highlighter\";\nimport js from \"react-syntax-highlighter/dist/esm/languages/hljs/javascript\";\nimport * as codeStyles from \"react-syntax-highlighter/dist/esm/styles/hljs\";\nimport codeSample from \"../utils/codeSample\";\nimport PrefPropType from \"../utils/prefPropType\";\nSyntaxHighlighter.registerLanguage(\"javascript\", js);\n\nclass Preview extends React.Component {\n  getTheme = preferences => {\n    return createMuiTheme({\n      palette: {\n        primary: {\n          main: preferences.primaryColor\n        },\n        secondary: {\n          main: preferences.secondaryColor\n        }\n      }\n    });\n  };\n\n  render() {\n    const { preferences = {}, classes } = this.props;\n    const theme = this.getTheme(preferences);\n    const isDark = preferences.theme === \"dark\";\n\n    return (\n      <Paper\n        className={classnames(\n          classes.root,\n          isDark ? classes.darkTheme : classes.lightTheme\n        )}\n      >\n        <MuiThemeProvider theme={theme}>\n          <AppBar position=\"relative\">\n            <Toolbar>\n              <Typography variant=\"h5\">Preview</Typography>\n            </Toolbar>\n          </AppBar>\n          <Container className={classes.container}>\n            <Typography variant=\"h6\">\n              Welcome {preferences.username}!\n            </Typography>\n            <Button\n              color=\"primary\"\n              variant=\"contained\"\n              className={classes.button}\n            >\n              Primary\n            </Button>\n            <Button\n              color=\"secondary\"\n              variant=\"contained\"\n              className={classes.button}\n            >\n              Secondary\n            </Button>\n\n            <SyntaxHighlighter\n              language=\"javascript\"\n              style={codeStyles[preferences.codeStyle]}\n            >\n              {codeSample}\n            </SyntaxHighlighter>\n          </Container>\n        </MuiThemeProvider>\n      </Paper>\n    );\n  }\n}\n\nPreview.propTypes = {\n  preferences: PrefPropType,\n  classes: PropTypes.objectOf(PropTypes.string)\n};\n\nconst styles = theme =>\n  createStyles({\n    root: {\n      width: \"100%\"\n    },\n    lightTheme: {},\n    darkTheme: {\n      backgroundColor: \"#424242\",\n      color: \"#fff\"\n    },\n    container: {\n      paddingTop: theme.spacing(3),\n      paddingBottom: theme.spacing(3)\n    },\n    button: {\n      margin: theme.spacing(1)\n    }\n  });\n\nexport default withStyles(styles)(Preview);\n","export default `\nexport const ipfsIsWorking = async ipfs => {\n  try {\n    const id = await ipfs.id();\n    if (id.id !== undefined && id.agentVersion !== undefined) {\n      return true;\n    } else {\n      return false;\n    }\n  } catch (err) {\n    return false;\n  }\n};\n`;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { withStyles, createStyles } from \"@material-ui/core/styles\";\nimport Snackbar from \"@material-ui/core/Snackbar\";\nimport SnackbarContent from \"@material-ui/core/SnackbarContent\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport ErrorIcon from \"@material-ui/icons/Error\";\nimport CloseIcon from \"@material-ui/icons/Close\";\n\nconst ErrorSnackbar = props => {\n  const { classes } = props;\n  return (\n    <Snackbar\n      anchorOrigin={{\n        vertical: \"bottom\",\n        horizontal: \"right\"\n      }}\n      open={!!props.error}\n      onClose={props.onClose}\n      autoHideDuration={5000}\n      className={classes.snackbar}\n    >\n      <SnackbarContent\n        className={classes.content}\n        message={\n          <span className={classes.message}>\n            <ErrorIcon className={classes.errorIcon} />\n            {props.error}\n          </span>\n        }\n        action={[\n          <IconButton key=\"close\" color=\"inherit\" onClick={props.onClose}>\n            <CloseIcon className={classes.closeIcon} />\n          </IconButton>\n        ]}\n      />\n    </Snackbar>\n  );\n};\n\nErrorSnackbar.propTypes = {\n  error: PropTypes.string,\n  onClose: PropTypes.func.isRequired,\n  classes: PropTypes.objectOf(PropTypes.string)\n};\n\nconst styles = theme =>\n  createStyles({\n    snackbar: {\n      backgroundColor: theme.palette.error.dark\n    },\n    content: {\n      backgroundColor: \"inherit\"\n    },\n    message: {\n      display: \"flex\",\n      alignItems: \"center\"\n    },\n    errorIcon: {\n      fontSize: 20,\n      marginRight: 8\n    },\n    closeIcon: {\n      fontSize: 20\n    }\n  });\n\nexport default withStyles(styles)(ErrorSnackbar);\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { withStyles, createStyles } from \"@material-ui/core/styles\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\n\nconst Loader = props => {\n  const { loaded, classes } = props;\n  if (loaded) {\n    return props.children;\n  }\n  return (\n    <div className={classes.root}>\n      <CircularProgress size={100} />\n    </div>\n  );\n};\n\nLoader.propTypes = {\n  loaded: PropTypes.bool,\n  children: PropTypes.element,\n  classes: PropTypes.objectOf(PropTypes.string)\n};\n\nconst styles = theme =>\n  createStyles({\n    root: {\n      display: \"flex\",\n      justifyContent: \"center\",\n      alignItems: \"center\",\n      paddingTop: theme.spacing(8)\n    }\n  });\n\nexport default withStyles(styles)(Loader);\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { withStyles, createStyles } from \"@material-ui/core/styles\";\nimport Container from \"@material-ui/core/Container\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Typography from \"@material-ui/core/Typography\";\nimport PreferenceForm from \"./PreferenceForm\";\nimport Preview from \"./Preview\";\nimport ErrorSnackbar from \"./ErrorSnackbar\";\nimport Loader from \"./Loader\";\nimport {\n  loadPreferences,\n  savePreferences,\n  DefaultCid\n} from \"../ipfs/preferences\";\n\nclass Main extends React.Component {\n  state = {\n    ipfsLoaded: false,\n    cid: \"\",\n    preferences: {\n      username: \"\",\n      primaryColor: \"#6446fa\",\n      secondaryColor: \"#ff5274\",\n      theme: \"light\",\n      font: \"Roboto\",\n      codeStyle: \"darcula\"\n    },\n    justSaved: false,\n    justLoaded: false,\n    error: null\n  };\n\n  async componentDidMount() {\n    const cid = localStorage.getItem(\"preferenceCID\") || DefaultCid;\n    await this.loadPreferences(cid);\n  }\n\n  handleCIDChange = value => {\n    this.setState({\n      ...this.state,\n      cid: value,\n      justLoaded: false\n    });\n  };\n\n  handlePrefChange = (name, value) => {\n    this.setState(state => ({\n      ...state,\n      preferences: {\n        ...state.preferences,\n        [name]: value\n      },\n      justSaved: false\n    }));\n  };\n\n  loadPreferences = async cid => {\n    let preferences;\n    try {\n      preferences = await loadPreferences(cid);\n    } catch (error) {\n      this.setState({ error: error.toString() });\n      return;\n    }\n\n    localStorage.setItem(\"preferenceCID\", cid);\n    this.setState({\n      cid,\n      preferences,\n      justLoaded: true,\n      ipfsLoaded: true\n    });\n  };\n\n  handleLoad = async evt => {\n    evt.preventDefault();\n    const { cid } = this.state;\n    this.loadPreferences(cid);\n  };\n\n  handleSave = async evt => {\n    evt.preventDefault();\n    const { preferences } = this.state;\n    if (preferences) {\n      let cid;\n      try {\n        cid = await savePreferences(preferences);\n      } catch (error) {\n        this.setState({ error: error.toString() });\n        return;\n      }\n      localStorage.setItem(\"preferenceCID\", cid);\n      this.setState({\n        cid,\n        justSaved: true,\n        ipfsLoaded: true\n      });\n    }\n  };\n\n  handleErrorClose = evt => {\n    if (evt) {\n      evt.preventDefault();\n    }\n    this.setState({ error: null });\n  };\n\n  render() {\n    const { classes } = this.props;\n    return (\n      <Container className={classes.container}>\n        <Typography variant=\"h4\" gutterBottom>\n          IPFS Portable User Settings\n        </Typography>\n        <Grid container spacing={3}>\n          <Grid item sm={12} md={6}>\n            <PreferenceForm\n              cid={this.state.cid}\n              preferences={this.state.preferences}\n              justSaved={this.state.justSaved}\n              justLoaded={this.state.justLoaded}\n              onCIDChange={this.handleCIDChange}\n              onPrefChange={this.handlePrefChange}\n              onLoad={this.handleLoad}\n              onSave={this.handleSave}\n            />\n          </Grid>\n          <Grid item sm={12} md={6}>\n            <Loader loaded={this.state.ipfsLoaded}>\n              <Preview\n                cid={this.state.cid}\n                preferences={this.state.preferences}\n              />\n            </Loader>\n          </Grid>\n        </Grid>\n        <ErrorSnackbar\n          error={this.state.error}\n          onClose={this.handleErrorClose}\n        />\n      </Container>\n    );\n  }\n}\n\nMain.propTypes = {\n  classes: PropTypes.objectOf(PropTypes.string).isRequired\n};\n\nconst styles = theme =>\n  createStyles({\n    container: {\n      marginTop: theme.spacing(8)\n    },\n    main: {\n      display: \"flex\"\n    }\n  });\n\nexport default withStyles(styles)(Main);\n","import React from \"react\";\nimport { MuiThemeProvider, createMuiTheme } from \"@material-ui/core/styles\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport Main from \"./components/Main\";\n\nconst theme = createMuiTheme({\n  palette: {\n    // type: \"dark\",\n    primary: {\n      main: \"#6446fa\"\n    },\n    secondary: {\n      main: \"#ff5274\"\n    }\n  }\n});\n\nfunction App() {\n  return (\n    <MuiThemeProvider theme={theme}>\n      <CssBaseline />\n      <Main />\n    </MuiThemeProvider>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n","import getIpfsWithConfig from \"get-ipfs\";\nimport { pin } from \"@fission-suite/client\";\n\nconst ipfsProvider =\n  process.env.REACT_APP_INTERPLANETARY_FISSION_URL || \"https://hostless.dev\";\nconst username = process.env.REACT_APP_INTERPLANETARY_FISSION_USERNAME;\nconst password = process.env.REACT_APP_INTERPLANETARY_FISSION_PASSWORD;\nconst bootstrapNode =\n  process.env.REACT_APP_BOOTSTRAP_NODE ||\n  \"/dns4/ipfs.runfission.com/tcp/4003/wss/ipfs/QmVLEz2SxoNiFnuyLpbXsH6SvjPTrHNMU88vCQZyhgBzgw\";\n\nexport const DefaultCid =\n  process.env.REACT_APP_DEFAULT_CID ||\n  \"QmUWWqCNSdZmus7mc52um5cpqUi1CaE97AzBTY7iWfBXV9\";\n\nconst getIpfs = async () => {\n  return getIpfsWithConfig({\n    bootstrap: [bootstrapNode]\n  });\n};\n\nexport const validPreferences = preferences => {\n  return (\n    preferences.codeStyle &&\n    preferences.primaryColor &&\n    preferences.primaryColor.length === 7 &&\n    preferences.secondaryColor &&\n    preferences.secondaryColor.length === 7 &&\n    preferences.theme &&\n    (preferences.theme === \"light\" || preferences.theme === \"dark\") &&\n    preferences.username &&\n    preferences.codeStyle\n  );\n};\n\nexport const loadPreferences = async cid => {\n  const ipfs = await getIpfs();\n  let resp, preferences;\n  try {\n    resp = await ipfs.cat(cid);\n  } catch (err) {\n    throw new Error(\"CID not found\");\n  }\n  try {\n    preferences = JSON.parse(resp);\n  } catch (err) {\n    throw new Error(\"CID does not contain preferences\");\n  }\n  if (!validPreferences(preferences)) {\n    throw new Error(\"Preferences are outdated. Try saving a new version.\");\n  }\n  return preferences;\n};\n\nexport const savePreferences = async preferences => {\n  if (!validPreferences(preferences)) {\n    throw new Error(\"Preferences are not valid. Try saving a new version.\");\n  }\n  const ipfs = await getIpfs();\n  const toAdd = Buffer.from(JSON.stringify(preferences));\n  let resp, cid;\n  try {\n    resp = await ipfs.add(toAdd);\n  } catch (err) {\n    throw new Error(\"Content could not be uploaded to IPFS\");\n  }\n  try {\n    cid = resp[0].hash;\n  } catch (err) {\n    throw new Error(\"Could not parse CID\");\n  }\n  try {\n    if (username && password && ipfsProvider) {\n      await pin(cid, { username, password }, ipfsProvider);\n    }\n  } catch (err) {\n    console.error(err);\n  }\n\n  return cid;\n};\n"],"sourceRoot":""}